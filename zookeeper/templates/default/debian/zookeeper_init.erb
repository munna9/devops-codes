#! /bin/sh
### BEGIN INIT INFO
# Provides:           <%=node['zookeeper']['service']['name']%>
# Required-Start:     $remote_fs $network
# Required-Stop:      $remote_fs $network
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Start a chef-client.
### END INIT INFO
#
# Copyright (c) 2009-2010 Opscode, Inc, legal_at_opscode.com
#
# chef-client         Startup script for chef-client.
# chkconfig: - 99 02
# description: starts up chef-client in daemon mode.
. /lib/lsb/init-functions

DAEMON=<%=node['zookeeper']['app']['home_directory']%>/bin/zkServer.sh
NAME=<%=node['zookeeper']['service']['name']%>
DESC=<%=node['zookeeper']['service']['name']%>
PIDFILE=<%=node['zookeeper']['conf']['dataDir']%>/zookeeper_server.pid

[ -r /etc/default/$NAME ] && . /etc/default/$NAME

stop_server() {
  start-stop-daemon --stop --quiet --pidfile $PIDFILE --exec $DAEMON
  errcode=$?
  return $errcode
}
running_pid() {
  pid=$1
  name=$2
  [ -z "$pid" ] && return 1
  [ ! -d /proc/$pid ] &&  return 1
  cmd=`awk '/Name:/ {print $2}' /proc/$pid/status`
  [ "$cmd" != "$name" ] &&  return 1
  return 0
}

running() {
  [ ! -f "$PIDFILE" ] && return 1
  pid=`cat $PIDFILE`
  running_pid $pid $NAME || return 1
  return 0
}
case "$1" in
  start|stop|restart)
    ZK_CMD="$1"
    ;;
  status)
    log_daemon_msg "Checking status of $DESC" "$NAME"
    if running ;  then
    log_progress_msg "running"
    log_end_msg 0
    else
    log_progress_msg "apparently not running"
    log_end_msg 1
    exit 3
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit
esac
. /<%=node['zookeeper']['service']['conf_file']%>
"$DAEMON" "$ZK_CMD"
exit 0