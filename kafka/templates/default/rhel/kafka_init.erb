#!/bin/bash
#
# chef-client Startup script for the Chef client
#
# chkconfig: - 98 02
# description: Client component of the Chef systems integration framework.

### BEGIN INIT INFO
# Provides: <%=node['kafka']['service']['name']%>
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Should-Start: $named $time
# Should-Stop: $named $time
# Short-Description: Startup script for the Chef client
# Description: Client component of the Chef systems integration framework.
### END INIT INFO

# Source function library
. /etc/init.d/functions
[ -e <%=node['kafka']['service']['conf_file']%> ] && . <%=node['kafka']['service']['conf_file']%>
exec="<%=node['kafka']['app']['home_directory']%>/bin/kafka-server-start.sh"
prog="<%=node['kafka']['service']['name']%>"


config=${CONFIG-<%=node['kafka']['conf']['home_directory']%>/server.properties}
pidfile=${PIDFILE-<%=node['kafka']['log']['home_directory']%>/kafka.pid}
lockfile=${LOCKFILE-/var/lock/subsys/$prog}
options=${OPTIONS-}

start() {
  [ -x $exec ] || exit 5
  [ -f $config ] || exit 6
  echo -n $"Starting $prog: "
  daemon $exec -daemon "$config" "$options"
  retval=$?
  PID_FILE=$(ps ax | grep -i 'kafka\.Kafka' | grep java | grep -v grep | awk '{print $1}')
  echo
  [ $retval -eq 0 ] && touch $lockfile
  [ $retval -eq 0 ] && echo "$PID_FILE" > $pidfile
  return $retval
}

stop() {

  echo -n $"Stopping $prog: "
  <%=node['kafka']['app']['home_directory']%>/bin/kafka-server-stop.sh
  retval=$?
  echo
  [ $retval -eq 0 ] && rm -f $lockfile
  [ $retval -eq 0 ] && rm -rf $pidfile
  [ $retval -eq 0 ] && rm -rf <%=node['kafka']['data']['directory']%>/.lock
  return $retval
}

restart () {
stop
start
}

reload() {
echo -n $"Reloading $prog: "
killproc -p $pidfile $exec -HUP
retval=$?
echo
return $retval
}

force_reload() {
restart
}

rh_status() {
# run checks to determine if the service is running or use generic status
status -p $pidfile $prog
}

rh_status_q() {
rh_status >/dev/null 2>&1
}

case "$1" in
start)
rh_status_q && exit 0
$1
;;
stop)
rh_status_q || exit 0
$1
;;
restart)
$1
;;
reload)
rh_status_q || exit 7
$1
;;
force-reload)
force_reload
;;
status)
rh_status
;;
condrestart|try-restart)
rh_status_q || exit 0
restart
;;
*)
echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
exit 2
esac
exit $?
