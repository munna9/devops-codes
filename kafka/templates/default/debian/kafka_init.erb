#! /bin/sh
### BEGIN INIT INFO
# Provides:           <%=node['kafka']['service']['name']%>
# Required-Start:     $remote_fs $network
# Required-Stop:      $remote_fs $network
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description:  Start a chef-client.
### END INIT INFO
#
# Copyright (c) 2009-2010 Opscode, Inc, legal_at_opscode.com
#
# chef-client         Startup script for chef-client.
# chkconfig: - 99 02
# description: starts up chef-client in daemon mode.

NAME=<%=node['kafka']['service']['name']%>
DESC=<%=node['kafka']['service']['name']%>
PIDFILE=<%=node['kafka']['log']['home_directory']%>/kafka.pid
START_SCRIPT= "<%=node['kafka']['app']['home_directory']%>/bin/kafka-server-start.sh -deamon <%=node['kafka']['conf']['home_directory']%>/server.properties"
STOP_SCRIPT="<%=node['kafka']['app']['home_directory']%>/bin/kafka-server-stop.sh
. /lib/lsb/init-functions

[ -r /etc/default/$NAME ] && . /etc/default/$NAME


running_pid() {
  pid=$1
  name=$2
  [ -z "$pid" ] && return 1
  [ ! -d /proc/$pid ] &&  return 1
  cmd=`awk '/Name:/ {print $2}' /proc/$pid/status`
  [ "$cmd" != "$name" ] &&  return 1
  return 0
}

running() {
  [ ! -f "$PIDFILE" ] && return 1
  pid=`cat $PIDFILE`
  running_pid $pid $NAME || return 1
  return 0
}

start_server() {
  start-stop-daemon --start --quiet --make-pidfile --pidfile $PIDFILE --exec $START_SCRIPT
  errcode=$?
  return $errcode
}

stop_server() {
  start-stop-daemon --stop --quiet --pidfile $PIDFILE \
  --exec $STOP_SCRIPT
  return $errcode
}


case "$1" in
  start)
    log_daemon_msg "Starting $DESC " "$NAME"
    if running ;  then
    log_progress_msg "apparently already running"
    log_end_msg 0
    exit 0
    fi
    if start_server ; then
      [ -n "$STARTTIME" ] && sleep $STARTTIME # Wait some time
      if  running ;  then
        log_end_msg 0
      else
        log_end_msg 1
      fi
    else
      log_end_msg 1
    fi
    ;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    if running ; then
      errcode=0
      stop_server || errcode=$?
      log_end_msg $errcode
    else
      log_progress_msg "apparently not running"
      log_end_msg 0
      exit 0
    fi
    ;;
  restart)
    log_daemon_msg "Restarting $DESC" "$NAME"
    errcode=0
    stop_server || errcode=$?
    [ -n "$DIETIME" ] && sleep $DIETIME
    start_server || errcode=$?
    [ -n "$STARTTIME" ] && sleep $STARTTIME
    running || errcode=$?
    log_end_msg $errcode
    ;;
  status)
    log_daemon_msg "Checking status of $DESC" "$NAME"
    if running ;  then
      log_progress_msg "running"
     log_end_msg 0
    else
     log_progress_msg "apparently not running"
      log_end_msg 1
      exit 3
    fi
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|status}" >&2
    exit 1
    ;;
esac
exit 0