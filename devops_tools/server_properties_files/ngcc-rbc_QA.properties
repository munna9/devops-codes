@Tokenisation Properties
@ *******************************************************************************************************
@ ******** The below configuration file will be parsed by deploy.sh to perform respective actions *******
@ *******************************************************************************************************
@ ---- Please have a look at each task definition and its parameters need to be provided ------
@ Note:  Any line starting with @ will be ignored as this framework treats it as a comment and you can write anywhere in this file
@ s3download --> S3 Server details --> Application Name --> The path of artifact from application --> Artifact Name
@ copy		 --> Server Host Name --> User Name --> Access Key path in Workspace --> Source File/Dir --> Destination File/Dir
@ run		 --> Server Host Name -->  User Name --> Access Key path in Workspace --> Command or script which needs to be executed
@ localizefile-> Artifact Name	--> property file path in artifact --> property file in build-properties repo 
@ localize	 --> Artifact Name	-->	property file path in artifact --> find string --> replace string
@ backup	 --> Server Host Name --> User Name --> Access Key path --> file/dir which needs to be backed up  --> backup location in server

%%deploy{
copylocalfile	##	buildproperties/ngcc/QA/Config.groovy ## grails-app/conf/
copylocalfile	##	buildproperties/ngcc/QA/careerconnect.properties ## grails-app/conf/
copylocalfile	##	buildproperties/ngcc/QA/awscredentials.properties ## web-app/awsProperties/
executelocal	##	grails clean
executelocal	##	grails compile
executelocal	##	grails war
@executelocal ## aws elb deregister-instances-from-load-balancer --load-balancer-name ngccqa --instances i-530fa7e5
@executelocal ## sleep 60
run		##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ##	sudo /etc/init.d/ngcc-rbc-tomcat stop
@backup ##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ## /opt/deployment/ngcc-tomcat/webapps/ROOT.war	##	/home/phenom/backup
run		##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ##	rm -rf /opt/deployment/ngcc-rbc-tomcat/webapps/ROOT*
run		##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ##	rm -rf /opt/deployment/ngcc-rbc-tomcat/temp/*
run		##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ##	rm -rf /opt/deployment/ngcc-rbc-tomcat/work/*
servercopy	##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ## target/ngcc-rbc_QA.war	##	/opt/deployment/ngcc-rbc-tomcat/webapps/ROOT.war
run		##	52.201.201.85	##	phenom ##	devops_tools/server_access/phenom.pem ##	sudo /etc/init.d/ngcc-rbc-tomcat start; sleep 180
@executelocal ## aws elb register-instances-with-load-balancer --load-balancer-name ngccqa --instances i-530fa7e5
@executelocal ## sleep 180
@
@executelocal ## aws elb deregister-instances-from-load-balancer --load-balancer-name ngccqa --instances i-0028802b0fcf023e6
@executelocal ## sleep 60
run		##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ##	sudo /etc/init.d/ngcc-rbc-tomcat stop
@backup ##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ## /opt/deployment/ngcc-tomcat/webapps/ROOT.war	##	/home/phenom/backup
run		##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ##	rm -rf /opt/deployment/ngcc-rbc-tomcat/webapps/ROOT*
run		##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ##	rm -rf /opt/deployment/ngcc-rbc-tomcat/temp/*
run		##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ##	rm -rf /opt/deployment/ngcc-rbc-tomcat/work/*
servercopy	##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ## target/ngcc-rbc_QA.war	##	/opt/deployment/ngcc-rbc-tomcat/webapps/ROOT.war
run		##	52.202.130.6	##	phenom ##	devops_tools/server_access/phenom.pem ##	sudo /etc/init.d/ngcc-rbc-tomcat start; sleep 180
@executelocal ## aws elb register-instances-with-load-balancer --load-balancer-name ngccqa --instances i-0028802b0fcf023e6
%%}
